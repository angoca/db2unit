--#SET TERMINATOR @

/*
 This file is part of db2unit: A unit testing framework for Db2 LUW.
 Copyright (C)  2014  Andres Gomez Casanova (@AngocA)

 db2unit is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 db2unit is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.

 Andres Gomez Casanova <angocaATyahooDOTcom>
*/

SET CURRENT SCHEMA DB2UNIT_ASSERTIONS_XML @

SET PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM", DB2UNIT_2_BETA, DB2UNIT_ASSERTIONS_XML @

/**
 * Tests for XML documents.
 *
 * Version: 2014-05-01 1
 * Author: Robert Mala, Andres Gomez Casanova (AngocA)
 */

BEGIN
 DECLARE STATEMENT VARCHAR(128);
 DECLARE CONTINUE HANDLER FOR SQLSTATE '42710' BEGIN END;
 SET STATEMENT = 'CREATE SCHEMA DB2UNIT_ASSERTIONS_XML';
 EXECUTE IMMEDIATE STATEMENT;
END @

-- Previously create the table in order to compile these tests.
BEGIN
 DECLARE STATEMENT VARCHAR(128);
 DECLARE CONTINUE HANDLER FOR SQLSTATE '42710' BEGIN END;
 SET STATEMENT = 'CREATE TABLE REPORT_TESTS LIKE DB2UNIT_2_BETA.REPORT_TESTS';
 EXECUTE IMMEDIATE STATEMENT;
END @

ALTER TABLE REPORT_TESTS
  ALTER COLUMN SUITE_NAME
  SET WITH DEFAULT 'DB2UNIT_ASSERTIONS_XML' @

-- Test fixtures
CREATE OR REPLACE PROCEDURE ONE_TIME_SETUP()
 P_ONE_TIME_SETUP: BEGIN
  -- Your code
 END P_ONE_TIME_SETUP @

CREATE OR REPLACE PROCEDURE SETUP()
 P_SETUP: BEGIN
  -- Your code
 END P_SETUP @

CREATE OR REPLACE PROCEDURE TEAR_DOWN()
 P_TEAR_DOWN: BEGIN
  -- Your code
 END P_TEAR_DOWN @

CREATE OR REPLACE PROCEDURE ONE_TIME_TEAR_DOWN()
 P_ONE_TIME_TEAR_DOWN: BEGIN
  -- Your code
 END P_ONE_TIME_TEAR_DOWN @

-- Function to show correctly an xml.
CREATE OR REPLACE FUNCTION XML_TO_CHAR(
_IF __SQLSTATE_429BB _THEN
  IN VALUE CLOB
_ELSE
  IN VALUE XML
_END
  ) RETURNS VARCHAR(500)
  LANGUAGE SQL
  SPECIFIC F_XML_TO_CHAR
  DETERMINISTIC
  NO EXTERNAL ACTION
 F_XML_TO_CHAR: BEGIN
  DECLARE RET VARCHAR(500) DEFAULT ' ';

  IF (VALUE IS NULL) THEN
    SET RET = 'NULL';
  ELSE
-- FIXME correct the following code 
--_IF __SQLSTATE_429BB _THEN
--   SET RET = TRIM(LEFT(VALUE, 500));
--_ELSE
--   SET RET = SUBSTR(XMLSERIALIZE(VALUE AS VARCHAR(500)), 1, 500);
--_END
  END IF;
  RETURN RET;
 END F_XML_TO_CHAR @

-- Tests
-- Test two identical XML documents.
CREATE OR REPLACE PROCEDURE TEST_XML_01_EQUALS()
 BEGIN
_IF __SQLSTATE_429BB _THEN
  DECLARE DOC1 CLOB;
  DECLARE DOC2 CLOB;
_ELSE
  DECLARE DOC1 XML;
  DECLARE DOC2 XML;
_END
  DECLARE ACTUAL_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE EXPECTED_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;

  SET EXPECTED_MSG = 'Message XML check';
  INSERT INTO DB2UNIT_ASSERTIONS_XML.REPORT_TESTS (DATE, EXECUTION_ID,
    TEST_NAME, MESSAGE) VALUES (CURRENT TIMESTAMP, 0, '', EXPECTED_MSG);

_IF __SQLSTATE_429BB _THEN
  SET DOC1 = '<a>Hello World</a>';
  SET DOC2 = '<a>Hello World</a>';
_ELSE
  SET DOC1 = XMLPARSE(DOCUMENT '<a>Hello World</a>');
  SET DOC2 = XMLPARSE(DOCUMENT '<a>Hello World</a>');
_END

  CALL DB2UNIT.ASSERT_XML_EQUALS(DOC1, DOC2);

  SELECT MESSAGE INTO ACTUAL_MSG
    FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE DATE = (SELECT MAX(DATE)
      FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);

  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE EXECUTION_ID = 0
    AND MESSAGE = EXPECTED_MSG
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED_MSG, ACTUAL_MSG);
 END @

-- Test two different XML documents.
CREATE OR REPLACE PROCEDURE TEST_XML_02_DIFF()
 BEGIN
  DECLARE STRING1 VARCHAR(512);
  DECLARE STRING2 VARCHAR(512);
_IF __SQLSTATE_429BB _THEN
  DECLARE DOC1 CLOB;
  DECLARE DOC2 CLOB;
_ELSE
  DECLARE DOC1 XML;
  DECLARE DOC2 XML;
_END
  DECLARE ACTUAL_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE EXPECTED_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;

  SET EXPECTED_MSG = 'The content of both XML documents is different';
  SET STRING1 = '<a>Hello World</a>';
  SET STRING2 = '<a>Ciao Mondo</a>';
_IF __SQLSTATE_429BB _THEN
  SET DOC1 = STRING1;
  SET DOC2 = STRING2;
_ELSE
  SET DOC1 = XMLPARSE(DOCUMENT STRING1);
  SET DOC2 = XMLPARSE(DOCUMENT STRING2);
_END

  CALL DB2UNIT.ASSERT_XML_EQUALS(DOC1, DOC2);
  CALL DB2UNIT.BACK_TO_EXECUTING();

  -- Checks the reports table.
  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE MESSAGE = 'Actual  : "' || STRING2 || '"'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);
  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE MESSAGE = 'Expected: "' || STRING2 || '"'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);

  SELECT MESSAGE INTO ACTUAL_MSG
    FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE DATE = (SELECT MAX(DATE)
      FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);

  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE MESSAGE = EXPECTED_MSG
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);
  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE MESSAGE = 'XML_EQUALS'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED_MSG, ACTUAL_MSG);
 END @

-- Test two identical XML documents with attributes.
CREATE OR REPLACE PROCEDURE TEST_XML_03_EQUAL_ONE_ATTR()
 BEGIN
_IF __SQLSTATE_429BB _THEN
  DECLARE DOC1 CLOB;
  DECLARE DOC2 CLOB;
_ELSE
  DECLARE DOC1 XML;
  DECLARE DOC2 XML;
_END
  DECLARE ACTUAL_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE EXPECTED_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;

  SET EXPECTED_MSG = 'Message XML check';
  INSERT INTO DB2UNIT_ASSERTIONS_XML.REPORT_TESTS (DATE, EXECUTION_ID,
    TEST_NAME, MESSAGE) VALUES (CURRENT TIMESTAMP, 0, '', EXPECTED_MSG);

_IF __SQLSTATE_429BB _THEN
  SET DOC1 = '<a type="greeting" lang="en">Hello World</a>';
  SET DOC2 = '<a type="greeting" lang="en">Hello World</a>';
_ELSE
  SET DOC1 = XMLPARSE(DOCUMENT '<a type="greeting" lang="en">Hello World</a>');
  SET DOC2 = XMLPARSE(DOCUMENT '<a type="greeting" lang="en">Hello World</a>');
_END

  CALL DB2UNIT.ASSERT_XML_EQUALS(DOC1, DOC2);

  SELECT MESSAGE INTO ACTUAL_MSG
    FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE DATE = (SELECT MAX(DATE)
      FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);

  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE EXECUTION_ID = 0
    AND MESSAGE = EXPECTED_MSG
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED_MSG, ACTUAL_MSG);
 END @

-- Test two XML documents with a different attributes.
CREATE OR REPLACE PROCEDURE TEST_XML_04_DIFF_ONE_ATTR()
 BEGIN
_IF __SQLSTATE_429BB _THEN
  DECLARE DOC1 CLOB;
  DECLARE DOC2 CLOB;
_ELSE
  DECLARE DOC1 XML;
  DECLARE DOC2 XML;
_END
  DECLARE ACTUAL_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE EXPECTED_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;

  SET EXPECTED_MSG = 'The content of both XML documents is different';
_IF __SQLSTATE_429BB _THEN
  SET DOC1 = '<a type="greeting">Hello World</a>';
  SET DOC2 = '<a lang="en">Hello World</a>';
_ELSE
  SET DOC1 = XMLPARSE(DOCUMENT '<a type="greeting">Hello World</a>');
  SET DOC2 = XMLPARSE(DOCUMENT '<a lang="en">Hello World</a>');
_END

  CALL DB2UNIT.ASSERT_XML_EQUALS(DOC1, DOC2);
  CALL DB2UNIT.BACK_TO_EXECUTING();

  -- Checks the reports table.
  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE MESSAGE = 'Actual  : "' || XML_TO_CHAR(DOC2) || '"'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);
  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE MESSAGE = 'Expected: "' || XML_TO_CHAR(DOC1) || '"'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);

  SELECT MESSAGE INTO ACTUAL_MSG
    FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE DATE = (SELECT MAX(DATE)
      FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);

  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE MESSAGE = EXPECTED_MSG
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);
  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE MESSAGE = 'XML_EQUALS'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED_MSG, ACTUAL_MSG);
 END @

-- Test two XML documents with a different attribute ORDER.
CREATE OR REPLACE PROCEDURE TEST_XML_05_ONE_ATTR_ORDER()
 BEGIN
_IF __SQLSTATE_429BB _THEN
  DECLARE DOC1 CLOB;
  DECLARE DOC2 CLOB;
_ELSE
  DECLARE DOC1 XML;
  DECLARE DOC2 XML;
_END
  DECLARE ACTUAL_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE EXPECTED_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;

  SET EXPECTED_MSG = 'Message XML check';
  INSERT INTO DB2UNIT_ASSERTIONS_XML.REPORT_TESTS (DATE, EXECUTION_ID,
    TEST_NAME, MESSAGE) VALUES (CURRENT TIMESTAMP, 0, '', EXPECTED_MSG);

_IF __SQLSTATE_429BB _THEN
  SET DOC1 = '<a type="greeting" lang="en">Hello World</a>';
  SET DOC2 = '<a lang="en" type="greeting">Hello World</a>';
_ELSE
  SET DOC1 = XMLPARSE(DOCUMENT '<a type="greeting" lang="en">Hello World</a>');
  SET DOC2 = XMLPARSE(DOCUMENT '<a lang="en" type="greeting">Hello World</a>');
_END

  CALL DB2UNIT.ASSERT_XML_EQUALS(DOC1, DOC2);

  SELECT MESSAGE INTO ACTUAL_MSG
    FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE DATE = (SELECT MAX(DATE)
      FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);

  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE EXECUTION_ID = 0
    AND MESSAGE = EXPECTED_MSG
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED_MSG, ACTUAL_MSG);
 END @

-- Test two XML different documents in attribute values and content.
CREATE OR REPLACE PROCEDURE TEST_XML_06_DIFFRENTS()
 BEGIN
_IF __SQLSTATE_429BB _THEN
  DECLARE DOC1 CLOB;
  DECLARE DOC2 CLOB;
_ELSE
  DECLARE DOC1 XML;
  DECLARE DOC2 XML;
_END
  DECLARE ACTUAL_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE EXPECTED_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;

  SET EXPECTED_MSG = 'The content of both XML documents is different';
_IF __SQLSTATE_429BB _THEN
  SET DOC1 = '<a type="greeting" lang="en">Hello World</a>';
  SET DOC2 = '<a type="farewell" lang="it">Ciao Mondo</a>';
_ELSE
  SET DOC1 = XMLPARSE(DOCUMENT '<a type="grerting" lang="en">Hello World</a>');
  SET DOC2 = XMLPARSE(DOCUMENT '<a type="farewell" lang="it">Ciao Mondo</a>');
_END

  CALL DB2UNIT.ASSERT_XML_EQUALS(DOC1, DOC2);
  CALL DB2UNIT.BACK_TO_EXECUTING();

  -- Checks the reports table.
  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE MESSAGE = 'Actual  : "' || XML_TO_CHAR(DOC2) || '"'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);
  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE MESSAGE = 'Expected: "' || XML_TO_CHAR(DOC1) || '"'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);

  SELECT MESSAGE INTO ACTUAL_MSG
    FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE DATE = (SELECT MAX(DATE)
      FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);

  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE MESSAGE = EXPECTED_MSG
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);
  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE MESSAGE = 'XML_EQUALS'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED_MSG, ACTUAL_MSG);
 END @

-- Test one of the documents is null.
CREATE OR REPLACE PROCEDURE TEST_XML_07_NULL()
 BEGIN
_IF __SQLSTATE_429BB _THEN
  DECLARE DOC1 CLOB;
  DECLARE DOC2 CLOB;
_ELSE
  DECLARE DOC1 XML;
  DECLARE DOC2 XML;
_END
  DECLARE ACTUAL_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE EXPECTED_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;

  SET EXPECTED_MSG = 'Nullability difference';

  SET DOC1 = NULL;
_IF __SQLSTATE_429BB _THEN
  SET DOC2 = '<a>Hello World</a>';
_ELSE
  SET DOC2 = XMLPARSE(DOCUMENT '<a>Hello World</a>');
_END
  CALL DB2UNIT.ASSERT_XML_EQUALS(DOC1, DOC2);
  CALL DB2UNIT.BACK_TO_EXECUTING();

  -- Checks the reports table.
  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE MESSAGE = 'Actual  : "' || XML_TO_CHAR(DOC2) || '"'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);
  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE MESSAGE = 'Expected: NULL'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);

  SELECT MESSAGE INTO ACTUAL_MSG
    FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE DATE = (SELECT MAX(DATE)
      FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);

  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE MESSAGE = EXPECTED_MSG
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);
  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE MESSAGE = 'XML_EQUALS'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED_MSG, ACTUAL_MSG);
 END @

-- Test the other of the documents is null.
CREATE OR REPLACE PROCEDURE TEST_XML_08_NULL()
 BEGIN
_IF __SQLSTATE_429BB _THEN
  DECLARE DOC1 CLOB;
  DECLARE DOC2 CLOB;
_ELSE
  DECLARE DOC1 XML;
  DECLARE DOC2 XML;
_END
  DECLARE ACTUAL_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE EXPECTED_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;

  SET EXPECTED_MSG = 'Nullability difference';
_IF __SQLSTATE_429BB _THEN
  SET DOC1 = '<a>Hello World</a>';
_ELSE
  SET DOC1 = XMLPARSE(DOCUMENT '<a>Hello World</a>');
_END
  SET DOC2 = NULL;

  CALL DB2UNIT.ASSERT_XML_EQUALS(DOC1, DOC2);
  CALL DB2UNIT.BACK_TO_EXECUTING();

  -- Checks the reports table.
  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE MESSAGE = 'Actual  : NULL'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);
  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE MESSAGE = 'Expected: "' || XML_TO_CHAR(DOC1) || '"'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);

  SELECT MESSAGE INTO ACTUAL_MSG
    FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE DATE = (SELECT MAX(DATE)
      FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);

  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE MESSAGE = EXPECTED_MSG
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);
  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE MESSAGE = 'XML_EQUALS'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED_MSG, ACTUAL_MSG);
 END @

-- Test the assert_xml_null with null.
CREATE OR REPLACE PROCEDURE TEST_XML_09()
 BEGIN
  DECLARE ACTUAL_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE EXPECTED_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
_IF __SQLSTATE_429BB _THEN
  DECLARE VALUE CLOB;
_ELSE
  DECLARE VALUE XML;
_END

  SET EXPECTED_MSG = 'Message check';
  INSERT INTO DB2UNIT_ASSERTIONS_XML.REPORT_TESTS (DATE, EXECUTION_ID,
    TEST_NAME, MESSAGE) VALUES (CURRENT TIMESTAMP, 0, '', EXPECTED_MSG);
  SET VALUE = NULL;
  CALL DB2UNIT.ASSERT_XML_NULL(VALUE);

  SELECT MESSAGE INTO ACTUAL_MSG
    FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED_MSG, ACTUAL_MSG);
  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE EXECUTION_ID = 0
    AND MESSAGE = EXPECTED_MSG
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);
 END @

-- Test the assert_xml_null without null.
CREATE OR REPLACE PROCEDURE TEST_XML_10()
 BEGIN
  DECLARE ACTUAL_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE EXPECTED_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
_IF __SQLSTATE_429BB _THEN
  DECLARE VALUE CLOB;
_ELSE
  DECLARE VALUE XML;
_END

  SET EXPECTED_MSG = 'The given value is "NOT NULL"';
_IF __SQLSTATE_429BB _THEN
  SET VALUE = '<a>Hello World</a>';
_ELSE
  SET VALUE = XMLPARSE(DOCUMENT '<a>Hello World</a>');
_END
  CALL DB2UNIT.ASSERT_XML_NULL(VALUE);
  CALL DB2UNIT.BACK_TO_EXECUTING();

  SELECT MESSAGE INTO ACTUAL_MSG
    FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);

  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE MESSAGE = EXPECTED_MSG
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);
  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE MESSAGE = 'XML_NULL'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED_MSG, ACTUAL_MSG);
 END @

-- Test the assert_xml_not_null with not null.
CREATE OR REPLACE PROCEDURE TEST_XML_11()
 BEGIN
  DECLARE ACTUAL_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE EXPECTED_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
_IF __SQLSTATE_429BB _THEN
  DECLARE VALUE CLOB;
_ELSE
  DECLARE VALUE XML;
_END

  SET EXPECTED_MSG = 'Message check';
  INSERT INTO DB2UNIT_ASSERTIONS_XML.REPORT_TESTS (DATE, EXECUTION_ID,
    TEST_NAME, MESSAGE) VALUES (CURRENT TIMESTAMP, 0, '', EXPECTED_MSG);
_IF __SQLSTATE_429BB _THEN
  SET VALUE = '<a>Hello World</a>';
_ELSE
  SET VALUE = XMLPARSE(DOCUMENT '<a>Hello</a>');
_END
  CALL DB2UNIT.ASSERT_XML_NOT_NULL(VALUE);

  SELECT MESSAGE INTO ACTUAL_MSG
    FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED_MSG, ACTUAL_MSG);
  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE EXECUTION_ID = 0
    AND MESSAGE = EXPECTED_MSG
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);
 END @

-- Test the assert_xml_not_null without not null.
CREATE OR REPLACE PROCEDURE TEST_XML_12()
 BEGIN
  DECLARE ACTUAL_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE EXPECTED_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
_IF __SQLSTATE_429BB _THEN
  DECLARE VALUE CLOB;
_ELSE
  DECLARE VALUE XML;
_END

  SET EXPECTED_MSG = 'The given value is "NULL"';
  SET VALUE = NULL;
  CALL DB2UNIT.ASSERT_XML_NOT_NULL(VALUE);
  CALL DB2UNIT.BACK_TO_EXECUTING();

  SELECT MESSAGE INTO ACTUAL_MSG
    FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);

  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE MESSAGE = EXPECTED_MSG
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);
  DELETE FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS
    WHERE MESSAGE = 'XML_NOT_NULL'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_XML.REPORT_TESTS);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED_MSG, ACTUAL_MSG);
 END @

-- Register the suite.
CALL DB2UNIT.REGISTER_SUITE(CURRENT SCHEMA) @

